# Generated by Django 4.1.4 on 2023-02-01 16:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('phone_no', models.CharField(default='0000000000', max_length=10)),
                ('first_name', models.CharField(default='anonymous', max_length=32, verbose_name='first name')),
                ('last_name', models.CharField(default='anonymous', max_length=32, verbose_name='last name')),
                ('role', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)])),
                ('picture', models.ImageField(default='profile_pic/default.png', upload_to='profile_pic')),
                ('friends', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(default='', max_length=10)),
                ('gene_biotype', models.CharField(default='', max_length=50)),
                ('transcript_biotype', models.CharField(default='', max_length=50)),
                ('gene_symbol', models.CharField(default='', max_length=10)),
                ('description', models.CharField(default='', max_length=200)),
                ('transcript', models.CharField(default='', max_length=200)),
                ('isValidate', models.BooleanField(default=False)),
                ('annotator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='annotationForAnnotator', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlastResult',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('isCds', models.BooleanField(default=True)),
                ('numberOfResults', models.IntegerField(default=0)),
                ('isFinished', models.BooleanField(default=False)),
                ('sequence', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500)),
                ('date', models.DateTimeField(auto_now=True)),
                ('likes', models.IntegerField(default=0)),
                ('annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bacterial_genome_annotation.annotation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Genome',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('fullSequence', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('sequence', models.TextField()),
                ('position', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('isCds', models.BooleanField(default=True)),
                ('direction', models.BooleanField(default=True)),
                ('hasValid', models.BooleanField(default=False)),
                ('genome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bacterial_genome_annotation.genome')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bacterial_genome_annotation.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlastHit',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('num', models.IntegerField()),
                ('definition', models.CharField(max_length=100)),
                ('accession', models.CharField(max_length=50)),
                ('len', models.IntegerField()),
                ('value', models.IntegerField(null=True)),
                ('identitie', models.IntegerField(null=True)),
                ('blastResult', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bacterial_genome_annotation.blastresult')),
            ],
        ),
        migrations.AddField(
            model_name='annotation',
            name='sequence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotationForSequence', related_query_name='annotationQueryName', to='bacterial_genome_annotation.sequence'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='validator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='annotationForValidator', to=settings.AUTH_USER_MODEL),
        ),
    ]
